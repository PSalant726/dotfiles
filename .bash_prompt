prompt_git() {
  local s=""
  local branchName=""

  # check if the current directory is in a git repository
  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; printf "%s" $?) == 0 ]; then
    # check if the current directory is in .git before running git checks
    if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == "false" ]; then
        # ensure index is up to date
        git update-index --really-refresh  -q &>/dev/null

        # check for uncommitted changes in the index
        if ! $(git diff --quiet --ignore-submodules --cached); then
          s="$s+";
        fi

        # check for unstaged changes
        if ! $(git diff-files --quiet --ignore-submodules --); then
          s="$s!";
        fi

        # check for untracked files
        if [ -n "$(git ls-files --others --exclude-standard)" ]; then
          s="$s?";
        fi

        # check for stashed files
        if $(git rev-parse --verify refs/stash &>/dev/null); then
          s="$s$";
        fi
    fi

    # get the short symbolic ref
    # if HEAD isn't a symbolic ref, get the short SHA
    # otherwise, just give up
    branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
      git rev-parse --short HEAD 2> /dev/null || \
      printf "(unknown)")"

    [ -n "$s" ] && s=" [$s]"

    printf "%s" "$1$branchName$s"
  else
    return
  fi
}

set_prompts() {
  local blue="\e[1;34m"
  local purple="\e[1;35m"
  local red="\e[1;31m"
  local reset="\e[0m"
  local white="\e[1;37m"
  local yellow="\e[1;33m"

  # logged in as root
  local userStyle=""

  if [[ "$USER" == "root" ]]; then
    userStyle="\[$purple\]"
  else
    userStyle="\[$red\]"
  fi

  # set the terminal title to the current working directory
  PS1="\[\033]0;\w\007\]"

  PS1+="\[$userStyle\]\u" # username
  PS1+="\[$white\]: "
  PS1+="\[$blue\]\w" # working directory
  PS1+="\$(prompt_git \"$white on $yellow\")" # git repository details
  PS1+="\n"
  PS1+="\[$white\]\$ \[$reset\]" # $ (and reset color)

  export PS1
}

set_prompts
unset set_prompts
